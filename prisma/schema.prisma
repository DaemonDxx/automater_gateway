// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    @@map("users")

    id Int @id @default(autoincrement()) @unique
    email String @db.VarChar(64) @unique
    login String @db.VarChar(32) @unique
    password String @db.VarChar(32)
    plans UserPlan[]
    tokens Token[]
    reports Report[]
}

enum TokenStatus {
    ACTIVE
    INACTIVE
}

model Token {
    @@map("tokens")

    id Int @id @default(autoincrement())
    token String?
    status TokenStatus @default(ACTIVE)
    create_at DateTime @default(now())
    user User @relation(fields: [user_id], references: [id])
    user_id Int
}

model Limit {
    @@map("limits")

    max_file_count Int
    max_file_size Int
    max_active_report_count Int
    plan Plan @relation(fields: [plan_id], references: [id])
    plan_id Int @unique
}

enum FileStatus {
    CREATED
    DOWNLOADED
    IN_PROGRESS
    PROCESSED
    MARK_DELETE
    DELETED
}

model File {
    @@map("files")

    id Int @id @default(autoincrement()) @unique
    name String @db.VarChar(256)
    status FileStatus @default(CREATED)
    create_at DateTime @default(now())
    slot Slot @relation("FileOfSlot", fields: [slot_id], references: [id])
    active_for_slot Slot? @relation("ActiveFile")
    meta FileMeta? @relation()
    slot_id Int
}

model FileMeta {
    @@map("file_meta")

    id Int @id @default(autoincrement()) @unique
    size Int
    mime String @db.VarChar
    path String
    file File @relation(fields: [file_id], references: [id])
    file_id Int @unique
}

model Plan {
    @@map("plans")

    id Int @id @default(autoincrement()) @unique
    name String @db.VarChar(64)
    description String
    archive Boolean @default(false)
    default Boolean @default(false)
    limit Limit?
    user_plans UserPlan[]
}

model UserPlan {
    @@map("user_plans")

    id Int @id @default(autoincrement()) @unique
    start_at DateTime
    valid_until DateTime
    user User @relation(fields: [user_id], references: [id])
    plan Plan @relation(fields: [plan_id], references: [id])
    user_id Int
    plan_id Int
}

enum ReportStatus {
    ACTIVE
    INACTIVE
    DELETED
}

model Report {
    @@map("reports")

    id Int @id @default(autoincrement()) @unique
    title String @db.VarChar(128) @default("Untitled")
    status ReportStatus @default(ACTIVE)
    create_at DateTime @default(now())
    update_at DateTime @default(now())
    owner User @relation(fields: [owner_id], references: [id])
    slots Slot[]
    owner_id Int
}

model FilePath {
    @@map("file_path")

    id Int @id @default(autoincrement()) @unique
    path String
    file_id Int @unique
}

enum SlotType {
    SOURCE
    TEMPLATE
    OUTPUT
}

enum SlotStatus {
    ACTIVE
    DELETED
}

model Slot {
    @@map("slots")

    id Int @id @default(autoincrement()) @unique
    name String @db.VarChar(256)
    report Report @relation(fields: [report_id], references: [id])
    active_file File? @relation("ActiveFile", fields: [active_file_id], references: [id])
    files File[] @relation("FileOfSlot")
    type SlotType
    status SlotStatus @default(ACTIVE)

    report_id Int
    active_file_id Int? @unique
}